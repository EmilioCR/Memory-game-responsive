function Deck(){this.cards=[];for(var e=["beemo-detective","beemo-detective","beemo","beemo","lemon","lemon","jake-angry","jake-angry","pingu","pingu","grumosa","grumosa","finn","finn","fionna","fionna","fire-princess","fire-princess","marceline","marceline"],a=0;a<e.length;a++)this.cards.push(e[a])}function newDeck(){(new Deck).deckRandom()}Deck.prototype={contructor:Deck,deckRandom:function(){Deck(),this.randomDeck=new Array;for(var e=!1;!e;){var a=Math.floor(Math.random()*this.cards.length);this.randomDeck.push(this.cards[a]),this.cards.splice(a,1),this.cards.length<=0&&(e=!0)}for(var s=0;s<this.randomDeck.length;s++)this.cards[s]=this.randomDeck[s]}};var deck=new Deck;deck.deckRandom();var Cards=function(){for(var e,a,s,c,t=document.getElementById("cards"),r=document.getElementById("current-score"),d=0,n=0,i=0,o=0;o<20;o++){(l=document.createElement("li")).classList.add("card","back-cards"),l.value=o,t.appendChild(l)}for(var l=document.getElementsByClassName("card"),o=0;o<l.length;o++)l[o].addEventListener("click",function(){1===++n?(this.classList.remove("back-cards"),this.classList.add("show-"+deck.cards[this.value]+"-card"),firstClassNameCard=this.className,e=this,s=this.value):2===n&&(this.classList.remove("back-cards"),this.classList.add("show-"+deck.cards[this.value]+"-card"),secondClassNameCard=this.className,a=this,c=this.value,setTimeout(function(){s===c?(console.log("cheater"),n=1):firstClassNameCard==secondClassNameCard?(e.className=" ",a.className=" ",e.classList.add("card","matched"),a.classList.add("card","matched"),n=0,r.innerText=" ",d+=10,r.innerText=d,(i+=2)===deck.cards.length&&console.log("Game Over")):(console.log("false"),e.className=" ",a.className=" ",e.classList.add("card","back-cards"),a.classList.add("card","back-cards"),n=0)},500))})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
