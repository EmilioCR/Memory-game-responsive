function Deck(){this.cards=[];for(var e=["beemo-detective","beemo-detective","beemo","beemo","lemon","lemon","jake-angry","jake-angry","pingu","pingu","grumosa","grumosa","finn","finn","fionna","fionna","fire-princess","fire-princess","marceline","marceline"],a=0;a<e.length;a++)this.cards.push(e[a])}Deck.prototype={contructor:Deck,deckRandom:function(){Deck(),this.randomDeck=new Array;for(var e=!1;!e;){var a=Math.floor(Math.random()*this.cards.length);this.randomDeck.push(this.cards[a]),this.cards.splice(a,1),this.cards.length<=0&&(e=!0)}for(var s=0;s<this.randomDeck.length;s++)this.cards[s]=this.randomDeck[s]}};var deck=new Deck;deck.deckRandom();var Cards=function(){function e(){l=0,(deck=new Deck).deckRandom();for(var e=0;e<h.length;e++)h[e].classList.remove("matched"),h[e].classList.add("back-cards")}for(var a,s,c,t,d=document.getElementById("button-reset"),n=document.getElementById("cards"),r=document.getElementById("current-score"),i=0,o=0,l=0,m=0;m<20;m++){(h=document.createElement("li")).classList.add("card","back-cards"),h.value=m,n.appendChild(h)}for(var h=document.getElementsByClassName("card"),m=0;m<h.length;m++)h[m].addEventListener("click",function(){1===++o?(this.classList.remove("back-cards"),this.classList.add("show-"+deck.cards[this.value]+"-card"),firstClassNameCard=this.className,a=this,c=this.value):2===o&&(this.classList.remove("back-cards"),this.classList.add("show-"+deck.cards[this.value]+"-card"),secondClassNameCard=this.className,s=this,t=this.value,setTimeout(function(){c===t?(console.log("cheater"),o=1):firstClassNameCard==secondClassNameCard?(a.className=" ",s.className=" ",a.classList.add("card","matched"),s.classList.add("card","matched"),o=0,r.innerText=" ",i+=10,r.innerText=i,(l+=2)===deck.cards.length&&(console.log("Game Over"),console.log("new deck",l),(deck=new Deck).deckRandom(),e())):(console.log("false"),a.className=" ",s.className=" ",a.classList.add("card","back-cards"),s.classList.add("card","back-cards"),o=0)},500))});d.addEventListener("click",function(){e(),r.innerText=" ",i=0,r.innerText=i})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
